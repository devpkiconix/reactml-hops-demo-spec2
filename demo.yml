state:
  initial:
    user:
        name: 'bar'
        email: 'mynameisbar@example.com'
        firstName: 'bar'
        lastName: 'Barz'
        address:
            street: '1234 main street'
            city: 'la la land'
            zip: '00000'
            state: 'restless'
            country: 'somewhere'
    status:
        save: null
    specError: ''
    todoList:
      -
        label: Buy milk
        done: true
      -
        label: Brew coffee
        done: true
      -
        label: mix
        done: false
      -
        label: sip
        done: false
  stateNodeName: playground

components:
  App:
    styles:
      app:
        fontFamily: monospace
    view:
      tag: main
      props:
        className: .classes.app
      children:
        - tag: Header
        - tag: div
          children:
            - tag: Route
              props:
                path: /
                component: ...ReadOnly
                exact: true
            - tag: Route
              props:
                path: /reactml/view
                component: ...ReadOnly
                exact: true
            - tag: Route
              props:
                path: '/reactml/editor'
                component: ...Editor
                exact: true
            - tag: div
              props:
                className: .classes.right
              children:
                - tag: Route
                  props:
                    path: '/reactml/help'
                    component: ...Help
                    exact: true
                - tag: Route
                  props:
                    path: '/reactml/about'
                    component: ...About
                    exact: true
        - tag: Footer
  Header:
    styles:
      root:
        backgroundColor: lightBlue
    state-to-props: {}
    view:
      tag: div
      props:
        className: .classes.root
      children:
        - tag: div
          children:
            - tag: Link
              props:
                to: /reactml/view
              content: 'home'
            - tag: span
              content: ' | '
            - tag: Link
              props:
                to: /reactml/editor
              content: 'editor'
            - tag: span
              content: ' | '
            - tag: Link
              props:
                to: /reactml/about
              content: 'about'
  Footer:
    view:
      tag: Paper
      children:
        - tag: pre
          props:
            style:
              color: maroon
              paddingTop: 20px
          content: "This prototype is rendered from a YML config file. Please see
          *.yml files in src/containers/Playground folder"
  TodoList:
    state-to-props:
      items: todoList
    view:
      tag: div
      children:
        - tag: ReactMLArrayMapper
          props:
            email: .user.email
            over: .items
            as: todo
            component: ...Todo
  About:
    view:
      tag: div
      content: "This is a cool application"
  Help:
    view:
      tag: div
      content: "Help text here"
    ReadOnly:
    state-to-props:
      email: user.email
      firstName: user.firstName
    view:
      tag: div
      children:
        - tag: h4
          content: ReactML component name - ReadOnly
        - tag: div
          children:
          - tag: span
            content: 'Name: '
          - tag: span
            content: .firstName
        - tag: div
          children:
          - tag: span
            content: 'E-mail: '
          - tag: span
            content: .email
  Editor:
    state-to-props:
      email: user.email
      firstName: user.firstName
      saveStatus: status.save
      yaml: specText
      onChangeYaml: onChangeYaml
      yamlError: specError
      todoList: todoList
    styles:
      root: { }
      email: { }
      error:
        color: red
        fontSize: small
    dispach-to-props:
      myAction: someAction
    view:
      tag: form
      props:
      children:
        - tag: h4
          content: ReactML component name - Editor
        - tag: Grid
          props:
            container: true
          Grid:
            props: { item: true, xs: 12 }
            Paper:
              props:
                className: .classes.root
              Grid:
                props:
                  container: true
                children:
                - tag: Grid
                  props: { item: true, xs: 4 }
                  children:
                  - tag: TextField
                    props:
                      className: textField
                      label: Name
                      value: .firstName
                      onChange: ..onFirstNameChange
                      helperText: What's your name?
                      margin: normal
                - tag: Grid
                  props:
                    item: true
                    xs: 8
                    className: .classes.email
                  children:
                  - tag: TextField
                    props:
                      label: E-mail
                      value: .email
                      helperText: What's your email address?
                      onChange: ..onEmailChange
                      margin: normal
                - tag: Grid
                  props:
                    item: true
                    xs: 12
                  children:
                  - tag: button
                    props:
                      variant: contained
                      color: primary
                      onClick: ..save
                    children:
                    - tag: span
                      content: Save
                  - tag: button
                    props:
                      color: secondary
                    span:
                      content: cancel
                  - tag: Status
                    props:
                      status: .saveStatus
                - tag: Grid
                  props:
                    item: true
                    xs: 10
        - tag: Grid
          props:
            item: true
            xs: 10
          children:
            - tag: ReactMLArrayMapper
              props:
                over: .todoList
                as: todo
                component: ...Todo
